	Zmodyfikowany program z punktu 2. znajduje sie pod nazwa main_core.c. Jest to kopia programu main.c z niewielka modyfikacja, 
ktora powoduje blad krytyczny i zrzut pamieci. 

	Modyfikacja ma miejsce w 111. linijce, w metodzie measure_linkbook_creation, ktora jest wywolywana w funkcji main, jako druga z kolei.
Do wskaznika "span1" na strukture micro_t_span przypisalem wartosc NULL. Operacja, ktora powoduje blad krytyczyny, to odwolanie sie do pola struktury
wskazywanej przez ten wskaznik. Operacja ta ma miejsce w funkcji calc_average (39 linijka pliku main_core.c). 
Wywolanie tej funkcji (117 linijka pliku main_core.c) jako jeden ze swych argumentow przyjmuje wskaznik "span1".

Analiza pliku core:
	Do analizy pliku core niezbedne jest narzedzie GDB. Do skutecznego korzystania z tego narzedzia, niezbedne jest skompilowanie programu z opcja
-g, ktora dostarcza dodatkowych informacji dla debuggera GDB. Aby moc wygenerowac plik core, nalezy zmodyfikowac jego limit wielkosci za pomoca
narzedzia ulimit (np. wywolaniem ulimit -c unlimited)
	Przeanalizowanie pliku core jest mozliwe za pomoca komendy gdb -c core ./main, gdzie main jest nazwa skompilowanego programu, ktory
wygenerowal zrzut pamieci. Opcja -c wskazuje na plik zrzutu pamieci do przeanalizowania. 

Fragment zrzuconego obrazu pamieci:

Core was generated by `./main'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000000000402839 in calc_average (fst=0x0, scd=0x10d41f0, lst=0x10dfd70) at ../zad2/t_measurement.c:39
39          rtime = fst->rtime + scd->rtime + lst->rtime;

