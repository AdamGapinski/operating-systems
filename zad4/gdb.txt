	Zmodyfikowany program z punktu 2. znajduje się w katalogu zad2 pod nazwą main_core.c. Jest to kopia programu main.c z niewielką modyfikacją, 
która powoduje błąd krytyczny i zrzut pamięci. 

	Modyfikacja ma miejsce w 111. linijce, w metodzie measure_linkbook_creation, która jest wywoływana w funkcji main, jako druga z kolei.
Do wskaźnika "span1" na strukturę micro_t_span przypisałem wartość NULL. Operacja, która powoduje błąd krytyczyny, to odwołanie się do pola struktury
wskazywanej przez ten wskaźnik. Operacja ta ma miejsce w funkcji calc_average (39 linijka pliku main_core.c). 
Wywołanie tej funkcji (117 linijka pliku main_core.c) jako jeden ze swych argumentów przyjmuje wskaźnik "span1".

Analiza pliku core:
	Do analizy pliku core niezbędne jest narzędzie GDB. Do skutecznego korzystania z tego narzędzia, niezbędne jest skompilowanie programu z opcją
-g, która dostarcza dodatkowych informacji dla debuggera GDB. Aby móc wygenerować plik core, należy zmodyfikować jego limit wielkości za pomocą
narzędzia ulimit (np. wywołaniem ulimit -u unlimited)
	Przeanalizowanie pliku core jest możliwe za pomocą komendy gdb -c core ./main, gdzie main jest nazwą skompilowanego programu, który
wygenerował zrzut pamięci. Opcja -c wskazuje na plik zrzutu pamięci do przeanalizowania. 

Fragment zrzuconego obrazu pamięci:

Core was generated by `./main'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000000000402839 in calc_average (fst=0x0, scd=0x10d41f0, lst=0x10dfd70) at ../zad2/t_measurement.c:39
39          rtime = fst->rtime + scd->rtime + lst->rtime;

